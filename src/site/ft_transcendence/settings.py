"""
Django settings for ft_transcendence project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os

from pathlib import Path
from dotenv import load_dotenv

BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, "env/.env.local"))

SECRET_KEY = os.environ.get("SECRET_KEY")

DEBUG = bool(os.environ.get("DEBUG", default=0))

ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

STATICFILES_DIRS = [ BASE_DIR / "static"]

STATIC_URL = os.environ.get("DJANGO_STATIC_URL")
STATIC_ROOT = BASE_DIR / os.environ.get("DJANGO_STATIC_ROOT")

MEDIA_URL = os.environ.get("DJANGO_MEDIA_URL")
MEDIA_ROOT = BASE_DIR / os.environ.get("DJANGO_MEDIA_ROOT")

INSTALLED_APPS = [
	'daphne',
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
    'rest_framework',
	'authentication',
    'social',
	'pong',
    'liarsbar',
	'website',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ft_transcendence.urls'
CSRF_COOKIE_HTTPONLY = False
CSRF_TRUSTED_ORIGINS=["http://localhost:1337", "http://localhost:8000"]
CSRF_COOKIE_NAME = 'csrftoken'
TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'templates')],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

DATABASES = {
	"default": {
		"ENGINE": os.environ.get("DATABASE_ENGINE", "django.db.backends.sqlite3"),
		'NAME': os.environ.get('DATABASE_NAME', BASE_DIR / "db.sqlite3"),
		'USER': os.environ.get('DATABASE_USER', "user"),
		'PASSWORD': os.environ.get('DATABASE_PASSWORD', "password"),
		'HOST': os.environ.get('DATABASE_HOST', "localhost"),
		'PORT': os.environ.get('DATABASE_PORT', "5432"),  
	}
}

AUTH_USER_MODEL = 'website.User'

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

ASGI_APPLICATION = "ft_transcendence.asgi.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

if DEBUG != True:
	CHANNEL_LAYERS = {
		"default": {
			"BACKEND": "channels_redis.core.RedisChannelLayer",
			"CONFIG": {
				"hosts": [("redis", 6379)],
			},
		},
	}

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
